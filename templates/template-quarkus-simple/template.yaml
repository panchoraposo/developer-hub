apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-web-template
  title: Quarkus Service
  description: Create a simple microservice using Quarkus with Argo CD
  tags:
    - recommended
    - java
    - quarkus
    - maven
spec:
  owner: developers
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - java_package_name
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: my-quarkus-app
          ui:field: EntityNamePicker
          maxLength: 18
        group_id:
          title: Group Id
          type: string
          default: com.redhat.rhdh
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: quarkus-app
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          default: com.redhat.rhdh
          type: string
          description: Name for the java package. eg (com.redhat.blah)
        description:
          title: Description
          type: string
          default: A cool quarkus app
        owner:
          title: Owner
          type: string
          default: ${{ user.entity.metadata.name }}
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-brl4w.brl4w.sandbox968.opentlc.com
              enum:
                - gitlab-gitlab.apps.cluster-brl4w.brl4w.sandbox968.opentlc.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ parameters.owner }}
          cluster: ${{ parameters.repo.host }}
          host: ${{ parameters.repo.host }}
          destination: rhdh/${{ parameters.component_id }}
          port: 8080
          gitops_namespace: rhdh-gitops
        targetPath: ./${{ parameters.owner }}-${{ parameters.component_id }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.owner }}&repo=${{parameters.component_id}}"
        repoVisibility: public
        defaultBranch: main
        sourcePath: ./${{ parameters.owner }}-${{ parameters.component_id }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}